# 1) Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод
# __init__() ), который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — с истема некоторых математических величин, расположенных в виде
# прямоугольной схемы.
# Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в
# привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух
# объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой
# строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
#

class MatrixEv:
    # атрибуты класса:

    # Конструктор с атрибутами объекта:
    def __init__(self, matr):
        self.matr = matr

    # методы класса:
    def __str__(self):
        return 'Матрица:\n' + '\n'.join('\t'.join(map(str, line)) for line in self.matr)


    def __add__(self, other):
        res = self.matr
        for i in range(len(self.matr)):
            for j in range(len(self.matr[0])):
                res[i][j] = self.matr[i][j] + other.matr[i][j]
        return 'Сумма матриц:\n' + '\n'.join('\t'.join(map(str, line)) for line in res)

# Объект класса:

matrA = MatrixEv([[3, 2, 5], [4, 7, 8], [15, 11, 31] ])
matrB = MatrixEv([[1, 4, 7], [11, 54, 6], [3, 7, 5]])

print(matrA)
print(matrB)

matrC = matrA + matrB

print(matrC)

